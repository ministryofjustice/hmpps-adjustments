/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/things-to-do/prisoner/{prisonerId}': {
    /**
     * Retrieve things-to-do for a prisoner
     * @description Provides a list of things-to-do for a specified prisoner based on their ID.
     */
    get: operations['getThingsToDo']
  }
  '/service-definitions/prisoner/{prisonerId}': {
    /**
     * Retrieve the configuration of the CCRD services for a given prisoner
     * @description Provides a list of services, their configuration and things-to-do for a specified prisoner.
     */
    get: operations['getCcrdConfiguration']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    AdaIntercept: {
      /** @enum {string} */
      type: 'NONE' | 'FIRST_TIME' | 'UPDATE' | 'PADA' | 'PADAS' | 'FIRST_TIME_WITH_NO_ADJUDICATION'
      /** Format: int32 */
      number: number
      anyProspective: boolean
      messageArguments: string[]
      message: string
    }
    AdjustmentThingsToDo: {
      prisonerId: string
      thingsToDo: 'ADA_INTERCEPT'[]
      adaIntercept?: components['schemas']['AdaIntercept']
    }
    ThingsToDoOld: {
      prisonerId: string
      calculationThingsToDo: 'CALCULATION_REQUIRED'[]
      adjustmentThingsToDo?: components['schemas']['AdjustmentThingsToDo']
      hasAdjustmentThingsToDo: boolean
      hasCalculationThingsToDo: boolean
    }
    CcrdServiceDefinition: {
      href: string
      text: string
      thingsToDo: components['schemas']['ThingsToDo']
    }
    CcrdServiceDefinitions: {
      services: {
        [key: string]: components['schemas']['CcrdServiceDefinition']
      }
    }
    ThingToDo: {
      title: string
      message: string
      buttonText: string
      buttonHref: string
      /** @enum {string} */
      type: 'CALCULATION_REQUIRED' | 'ADA_INTERCEPT'
    }
    ThingsToDo: {
      things: components['schemas']['ThingToDo'][]
      /** Format: int32 */
      count: number
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Retrieve things-to-do for a prisoner
   * @description Provides a list of things-to-do for a specified prisoner based on their ID.
   */
  getThingsToDo: {
    parameters: {
      path: {
        /**
         * @description Prisoner's ID (also known as nomsId)
         * @example A1234AB
         */
        prisonerId: string
      }
    }
    responses: {
      /** @description Successfully returns the things-to-do list */
      200: {
        content: {
          'application/json': components['schemas']['ThingsToDoOld']
        }
      }
      /** @description Unauthorized - valid Oauth2 token required */
      401: {
        content: {
          'application/json': components['schemas']['ThingsToDoOld']
        }
      }
      /** @description Forbidden - requires appropriate role */
      403: {
        content: {
          'application/json': components['schemas']['ThingsToDoOld']
        }
      }
    }
  }
  /**
   * Retrieve the configuration of the CCRD services for a given prisoner
   * @description Provides a list of services, their configuration and things-to-do for a specified prisoner.
   */
  getCcrdConfiguration: {
    parameters: {
      path: {
        /**
         * @description Prisoner's ID (also known as nomsId)
         * @example A1234AB
         */
        prisonerId: string
      }
    }
    responses: {
      /** @description Successfully returns the ccrd service list */
      200: {
        content: {
          'application/json': components['schemas']['CcrdServiceDefinitions']
        }
      }
      /** @description Unauthorized - valid Oauth2 token required */
      401: {
        content: {
          'application/json': components['schemas']['CcrdServiceDefinitions']
        }
      }
      /** @description Forbidden - requires appropriate role */
      403: {
        content: {
          'application/json': components['schemas']['CcrdServiceDefinitions']
        }
      }
    }
  }
}
